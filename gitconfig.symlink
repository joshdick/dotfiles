[user]
	name = Josh Dick
	email = josh@joshdick.net
[color]
	ui = auto
[diff]
	tool = bcomp
	algorithm = histogram
	indentHeuristic = true
[difftool]
	prompt = false
[difftool "bcomp"]
	trustExitCode = true
	cmd = bcomp \"$LOCAL\" \"$REMOTE\"
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "vscode"]
	trustExitCode = false
	cmd = code --reuse-window --wait --diff \"$LOCAL\" \"$REMOTE\"
[mergetool]
	prompt = false
[mergetool "bcomp"]
	trustExitCode = true
	cmd = bcomp \"$LOCAL\" \"$REMOTE\" \"$BASE\" \"$MERGED\"
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustexitcode = true
[mergetool "vimdiff"]
	cmd = nvim -d \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\" -c '$wincmd w' -c 'wincmd J'
[help]
	format = web
	autocorrect = 1
[push]
	default = upstream
	autoSetupRemote = true
[core]
	excludesfile = ~/.gitignore
	pager = fmj | less -rX
[rerere]
	enabled = 1
[alias]
	recent = !git log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
	myrecent = !git log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative --author='Josh Dick'
	showtool = "!st() { commit=$1; if [ -z $commit ]; then commit=HEAD; fi; git difftool -d $commit^ $commit; }; st"
	scores = !git shortlog -ns
	log-hist = !git log-pretty --graph
	log-pretty = "log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
	tags = "tag -l -n1"
[dude]
	interval = 0
	notify-command = osascript -e \"display notification \\\"$DESCRIPTION\\\" with title \\\"$TITLE\\\"\"
	screensaver-command = false # Workaround until https://github.com/sickill/git-dude/pull/44 is merged
[pager]
	diff = fmj | diff-highlight | less -R
	show = fmj | diff-highlight | less -R
	log = fmj | diff-highlight | less -R
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = false
[init]
	defaultBranch = main
